@model E_Commerce_WebApplication.Models.Products

@{
    ViewData["Title"] = "ProductDetail";
    <script src="https://cdnjs.cloudflare.com/ajax/libs/zoom.js/2.3.2/zoom.min.js"></script>
}

<div class="container">
    <div class="row img-container">
        <div class="col-md-6">
            <div id ="img-zoomer-box">
                <img src="@Model.ImageUrl" id="img-1" alt="@Model.ProductName" class="img-fluid" />
@*            <div id="img-2" style="background-image:url(@Model.ImageUrl)"></div>
*@          </div>
        </div>
        <div class="col-md-6">
            <h2>@Model.ProductName</h2>
            <p>@Model.Description</p>
            <p><b>Price : &#x20b9; @Model.Price</b></p>
        
        <br />
@*        <button onclick="addToCartClicked()">Add to Cart</button>
            *@        <a href="@Url.Action("BuyNow", "Cart", new { productId = Model.Id})" class="btn btn-primary">Buy Now</a>

          <button id="addToCartButton" onclick="addToCartClicked1()" class="btn btn-primary">Add to Cart</button>


            <!-- Add this at the end of your HTML page -->
            <div id="addToCartModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal()">&times;</span>
                    <h2>Product Added to Cart</h2>
                    <p>Your item has been added to the cart.</p>
                    <!-- Add "Go to Bag" button with an onclick event to close the modal -->
                    <button onclick="closeModal()">Close</button>
                    <a href="@Url.Action("AddToCart", "Cart", new { productId = Model.Id,quantity= 1})" class="btn btn-primary">Go to Bag</a>
                </div>
            </div>
    </div>
</div>
</div>


<script>
        function showModal() {
            var modal = document.getElementById("addToCartModal");
            modal.style.display = "block";
        }

        // JavaScript for closing the modal
        function closeModal() {
            var modal = document.getElementById("addToCartModal");
            modal.style.display = "none";
        }

        // Function to handle the "Add to Cart" button click
        function addToCartClicked1() {
        // Get the selected quantity from the input element
        
        // You can now use the 'quantity' variable to perform your cart-related logic
        // For example, you can send an AJAX request to add the product to the cart
        // and update the cart UI.
        //window.location.href = "/Cart/AddToCart?productId=" + @Model.Id+" &quantity=" + quantity";
        // Here, we'll simply display an alert with the selected quantity as an example.
        //alert('Product added to cart with quantity: ' + quantity);
        var url = "/Cart/AddToCart?productId=" + @Model.Id + "&quantity=" + 1;

        // Redirect to the constructed URL
        window.location.href = url;

    }

        // Event listener to update the "Add to Cart" button behavior based on quantity
        var quantityInput = document.getElementById("quantityInput");

        quantityInput.addEventListener("input", function () {
            var addToCartButton = document.getElementById("addToCartButton");
            var quantity = parseInt(quantityInput.value); // Parse the value as an integer

            // Disable the "Add to Cart" button if the quantity is less than 1
            if (quantity < 1) {
                addToCartButton.disabled = true;
            } else {
                addToCartButton.disabled = false;
            }
        });
</script>

<script>
    var imageUrl = '@Model.ImageUrl';
</script>

<script>
    let zoomer = function () {
        /*
        document.querySelector('#img-zoomer-box')
            .addEventListener('mousemove', function (e) {
                let original = document.querySelector('#img-1');
                let magnified = document.querySelector('#img-2'),
                    style = magnified.style,
                    x = e.pageX - this.offsetLeft,
                    y = e.pageY - this.offsetTop,
                    imgWidth = original.offsetWidth,
                    imgHeight = original.offsetHeight,
                    xperc = ((x / imgWidth) * 100),
                    yperc = ((y / imgHeight) * 100);
                //lets user scroll past right edge of image
                if (x > (.01 * imgWidth)) {
                    xperc += (.15 * xperc);
                };
                //lets user scroll past bottom edge of image
                if (y >= (.01 * imgHeight)) {
                    yperc += (.15 * yperc);
                };
                style.backgroundPositionX = (xperc - 9) + '%';
                style.backgroundPositionY = (yperc - 9) + '%';
                style.left = (x - 180) + 'px';
                style.top = (y - 180) + 'px';

            }, false);
            */
        let original = document.querySelector('#img-1');
        let magnified = document.createElement('div');
        magnified.id = 'img-2';
        
        magnified.style.backgroundImage = `url(${imageUrl})`;
        document.body.appendChild(magnified);

        document.querySelector('#img-zoomer-box')
            .addEventListener('mousemove', function (e) {
                let style = magnified.style,
                    x = e.pageX - this.offsetLeft,
                    y = e.pageY - this.offsetTop,
                    imgWidth = original.offsetWidth,
                    imgHeight = original.offsetHeight,
                    xperc = ((x / imgWidth) * 100),
                    yperc = ((y / imgHeight) * 100);

                // Check if the cursor is inside the image
                if (x >= 0 && x <= imgWidth && y >= 0 && y <= imgHeight) {
                    style.display = 'block';
                    style.backgroundPositionX = (xperc - 9) + '%';
                    style.backgroundPositionY = (yperc - 9) + '%';
                    style.left = (x - 180) + 'px';
                    style.top = (y - 180) + 'px';
                } else {
                    style.display = 'none';
                }
            }, false);

    }();
</script>